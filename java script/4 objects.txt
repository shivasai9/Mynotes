an object in js is different from java.

object in js will not bound to a class. 

an object in java script is nothing but a collection of name(property) value pairs

an object is a collection of different properties(string,number....)

  name value pair is a object

ex:
    address(name) = 'xyz'(value) // name value pair

value may be another name value pair or another object

ex:
   address = { 
              name = "shiva sai",
              street = { 
                        no = 2434,
                        name = 'xyz'
                        }

               }


by using dot(.) operator we can add a new member(name value pair) to the object and we can use it to retrive(access) the member of the object. 

we get undefined if we access the property which was not there in the object.

objects can have methods.

we can access objects in 2 ways 
1.dot notation 
2.square bracket notation


  address = { 
              name = "shiva sai"
            }

1.address.name

2.address["name"]


use bracket notation when 
1.propery name is a invalid identifier
2.property name is a number
 address = { 
              "1" = "shiva sai"
            }

3.when property name is dynamic
 address = { 
              name = "shiva sai"
            }

var value = "name";

address.value===============>(wrong)
address[value]==============>(correct)

example:

 var address = { 
              name = "shiva sai"
            }

address is the variable which holds the address of the object which is in the (heap) memory
here the address is just reference to the object in memory

nested objects 


object variables are equal when they point to same object in the memory.

example:

var obj1 = {
               name = "shiva sai"
            }


var obj2 = obj1; // here obj1 and obj2 will point to the same loacation in memory.

if(obj1 === obj2){
 console.log("variables are equal")
}

we can delete the property of the objects by using delete operator

example:

var obj = {
            name : "shiva sai",
            age :  20
            }

 delete obj.age =========> syntax for deleting a property from the object. 

wrapper objects ==========>

var name = "shiva sai"

if we want to get the length of the string then we use 

name.length

 . operator works only on objects but name is string. how does it work ????

name.length ========> while executing this statement it internally creates a temporary wrapper object around the string and access the length property and then that object will be destroyed.




























































